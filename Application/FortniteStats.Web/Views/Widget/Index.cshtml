@using FortniteStats.Web.Models.Widget
@model WidgetOutputModel
@{ 
    this.Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="@(this.Url.Content("~/favicon.ico"))" type="image/x-icon">
    <title>Fortnite Stats Widget</title>
    <style type="text/css">
        body {
            font-size: 50px;
            font-family: 'Burbank Big';
        }
    </style>
    <script type="text/javascript" src="@(this.Url.Content("~/Scripts/jquery-3.3.1.min.js"))"></script>
    <script type="text/javascript" src="@(this.Url.Content("~/Scripts/jquery.signalR-2.2.3.min.js"))"></script>
    <script type="text/javascript" src="@(this.Url.Content("~/signalr/hubs"))"></script>

</head>
<body>
    <div class="stats_container">
        @foreach (var statItem in this.Model.Stats)
        {
            <span class="stat_name">@(statItem.Key)</span>@: <span class="stat_value">@(statItem.Value)</span>
        }
    </div>
    
    <script type="text/javascript">
        $(function () {
            var widgetHub = $.connection.widget,
                widgetOptions = @(this.Model.Options.ToJs());

            function init() {
                widgetHub.server.subscribeOnStatsUpdates(widgetOptions);
            }
            

            widgetHub.client.updateStats = function (stats) {
                console.log('updateStats');
            };

            $.connection.hub.start().done(init);
        });
    </script>
</body>
</html>